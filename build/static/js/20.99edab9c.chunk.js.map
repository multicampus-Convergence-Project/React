{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-federated-sign-in.entry.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/constants-d1abe7de.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-types-78df304e.js"],"names":["__webpack_require__","r","__webpack_exports__","d","AmplifyFederatedSignIn","_index_39969785_js__WEBPACK_IMPORTED_MODULE_0__","_aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__","_auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_2__","_aws_amplify_auth__WEBPACK_IMPORTED_MODULE_3__","_constants_d1abe7de_js__WEBPACK_IMPORTED_MODULE_4__","logger","hostRef","Object","this","authState","SignIn","federated","prototype","componentWillLoad","configure","Error","_a","oauth","oauth_config","assign","auth0","render","values","includes","debug","data-test","AUTH_CHANNEL","COUNTRY_DIAL_CODE_SUFFIX","EMAIL_SUFFIX","NO_AUTH_MODULE_FOUND","PHONE_EMPTY_ERROR_MESSAGE","REDIRECTED_FROM_HOSTED_UI","SETUP_TOTP","TOAST_AUTH_ERROR_EVENT","UI_AUTH_CHANNEL","AUTH_STATE_CHANGE_EVENT","PHONE_SUFFIX","AUTHENTICATOR_AUTHSTATE","NO_INTERACTIONS_MODULE_FOUND","NO_STORAGE_MODULE_FOUND","USER_NOT_SETUP_SOFTWARE_TOKEN_MFA","USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA","COUNTRY_DIAL_CODE_DEFAULT","SUCCESS","AUTH_SOURCE_KEY","CODE_SUFFIX","PASSWORD_SUFFIX","USERNAME_SUFFIX","AuthState","MfaOption","ChallengeName","AuthFormField","UsernameAlias"],"mappings":"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","file":"static/js/20.99edab9c.chunk.js","sourcesContent":["import { r as registerInstance, h } from './index-39969785.js';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-d1abe7de.js';\nvar logger = new ConsoleLogger('amplify-federated-sign-in');\n\nvar AmplifyFederatedSignIn =\n/** @class */\nfunction () {\n  function AmplifyFederatedSignIn(hostRef) {\n    registerInstance(this, hostRef);\n    /** The current authentication state. */\n\n    this.authState = AuthState.SignIn;\n    /** Federated credentials & configuration. */\n\n    this.federated = {};\n  }\n\n  AmplifyFederatedSignIn.prototype.componentWillLoad = function () {\n    if (!Auth || typeof Auth.configure !== 'function') {\n      throw new Error(NO_AUTH_MODULE_FOUND);\n    }\n\n    var _a = Auth.configure().oauth,\n        oauth = _a === void 0 ? {} : _a; // backward compatibility\n\n    if (oauth['domain']) {\n      this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth);\n    } else if (oauth['awsCognito']) {\n      this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth['awsCognito']);\n    }\n\n    if (oauth['auth0']) {\n      this.federated.auth0 = Object.assign(Object.assign({}, this.federated.auth0), oauth['auth0']);\n    }\n  };\n\n  AmplifyFederatedSignIn.prototype.render = function () {\n    if (!this.federated) {\n      logger.debug('federated prop is empty. show nothing');\n      logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');\n      return null;\n    }\n\n    if (!Object.values(AuthState).includes(this.authState)) {\n      return null;\n    }\n\n    logger.debug('federated Config is', this.federated);\n    return h(\"amplify-form-section\", {\n      \"data-test\": \"federated-sign-in-section\"\n    }, h(\"amplify-section\", {\n      \"data-test\": \"federated-sign-in-body-section\"\n    }, h(\"amplify-federated-buttons\", {\n      authState: this.authState,\n      \"data-test\": \"federated-sign-in-buttons\",\n      federated: this.federated\n    })));\n  };\n\n  return AmplifyFederatedSignIn;\n}();\n\nexport { AmplifyFederatedSignIn as amplify_federated_sign_in };","// Dictionaries\n// fieldId constants\nvar USERNAME_SUFFIX = 'username';\nvar EMAIL_SUFFIX = 'email';\nvar CODE_SUFFIX = 'code';\nvar PHONE_SUFFIX = 'phone';\nvar PASSWORD_SUFFIX = 'password'; // Country Dial Code common constants\n\nvar COUNTRY_DIAL_CODE_SUFFIX = 'country-dial-code-select';\nvar COUNTRY_DIAL_CODE_DEFAULT = '+1'; // Auth Keys\n\nvar AUTH_SOURCE_KEY = 'amplify-auth-source';\nvar REDIRECTED_FROM_HOSTED_UI = 'amplify-redirected-from-hosted-ui';\nvar AUTHENTICATOR_AUTHSTATE = 'amplify-authenticator-authState'; // Error message Common Constants\n\nvar PHONE_EMPTY_ERROR_MESSAGE = 'Phone number can not be empty';\nvar NO_AUTH_MODULE_FOUND = 'No Auth module found, please ensure @aws-amplify/auth is imported';\nvar NO_STORAGE_MODULE_FOUND = 'No Storage module found, please ensure @aws-amplify/storage is imported';\nvar NO_INTERACTIONS_MODULE_FOUND = 'No Interactions module found, please ensure @aws-amplify/interactions is imported'; // TOTP Messages\n\nvar SETUP_TOTP = 'SETUP_TOTP'; // Select MFA Types Messages\n\nvar USER_NOT_SETUP_SOFTWARE_TOKEN_MFA = 'User has not set up software token mfa';\nvar USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA = 'User has not verified software token mfa'; // Common events\n\nvar SUCCESS = 'SUCCESS'; // Hub Events and Channels\n\nvar AUTH_CHANNEL = 'auth';\nvar UI_AUTH_CHANNEL = 'UI Auth';\nvar TOAST_AUTH_ERROR_EVENT = 'ToastAuthError';\nvar AUTH_STATE_CHANGE_EVENT = 'AuthStateChange';\nexport { AUTH_CHANNEL as A, COUNTRY_DIAL_CODE_SUFFIX as C, EMAIL_SUFFIX as E, NO_AUTH_MODULE_FOUND as N, PHONE_EMPTY_ERROR_MESSAGE as P, REDIRECTED_FROM_HOSTED_UI as R, SETUP_TOTP as S, TOAST_AUTH_ERROR_EVENT as T, UI_AUTH_CHANNEL as U, AUTH_STATE_CHANGE_EVENT as a, PHONE_SUFFIX as b, AUTHENTICATOR_AUTHSTATE as c, NO_INTERACTIONS_MODULE_FOUND as d, NO_STORAGE_MODULE_FOUND as e, USER_NOT_SETUP_SOFTWARE_TOKEN_MFA as f, USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA as g, COUNTRY_DIAL_CODE_DEFAULT as h, SUCCESS as i, AUTH_SOURCE_KEY as j, CODE_SUFFIX as k, PASSWORD_SUFFIX as l, USERNAME_SUFFIX as m };","// TODO: Move these values to or extract them from the Cognito Provider in the Auth category for Auth V2\nvar AuthState;\n\n(function (AuthState) {\n  AuthState[\"SignUp\"] = \"signup\";\n  AuthState[\"SignOut\"] = \"signout\";\n  AuthState[\"SignIn\"] = \"signin\";\n  AuthState[\"Loading\"] = \"loading\";\n  AuthState[\"SignedOut\"] = \"signedout\";\n  AuthState[\"SignedIn\"] = \"signedin\";\n  AuthState[\"SigningUp\"] = \"signingup\";\n  AuthState[\"ConfirmSignUp\"] = \"confirmSignUp\";\n  AuthState[\"confirmingSignUpCustomFlow\"] = \"confirmsignupcustomflow\";\n  AuthState[\"ConfirmSignIn\"] = \"confirmSignIn\";\n  AuthState[\"confirmingSignInCustomFlow\"] = \"confirmingsignincustomflow\";\n  AuthState[\"VerifyingAttributes\"] = \"verifyingattributes\";\n  AuthState[\"ForgotPassword\"] = \"forgotpassword\";\n  AuthState[\"ResetPassword\"] = \"resettingpassword\";\n  AuthState[\"SettingMFA\"] = \"settingMFA\";\n  AuthState[\"TOTPSetup\"] = \"TOTPSetup\";\n  AuthState[\"CustomConfirmSignIn\"] = \"customConfirmSignIn\";\n  AuthState[\"VerifyContact\"] = \"verifyContact\";\n})(AuthState || (AuthState = {}));\n\nvar MfaOption;\n\n(function (MfaOption) {\n  MfaOption[\"TOTP\"] = \"TOTP\";\n  MfaOption[\"SMS\"] = \"SMS\";\n  MfaOption[\"NOMFA\"] = \"NOMFA\";\n})(MfaOption || (MfaOption = {}));\n\nvar ChallengeName;\n\n(function (ChallengeName) {\n  ChallengeName[\"SoftwareTokenMFA\"] = \"SOFTWARE_TOKEN_MFA\";\n  ChallengeName[\"SMSMFA\"] = \"SMS_MFA\";\n  ChallengeName[\"NewPasswordRequired\"] = \"NEW_PASSWORD_REQUIRED\";\n  ChallengeName[\"MFASetup\"] = \"MFA_SETUP\";\n  ChallengeName[\"CustomChallenge\"] = \"CUSTOM_CHALLENGE\";\n})(ChallengeName || (ChallengeName = {}));\n\nvar AuthFormField;\n\n(function (AuthFormField) {\n  AuthFormField[\"Password\"] = \"password\";\n})(AuthFormField || (AuthFormField = {}));\n\nvar UsernameAlias;\n\n(function (UsernameAlias) {\n  UsernameAlias[\"username\"] = \"username\";\n  UsernameAlias[\"email\"] = \"email\";\n  UsernameAlias[\"phone_number\"] = \"phone_number\";\n})(UsernameAlias || (UsernameAlias = {}));\n\nexport { AuthState as A, ChallengeName as C, MfaOption as M, UsernameAlias as U, AuthFormField as a };"],"sourceRoot":""}